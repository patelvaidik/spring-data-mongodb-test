buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
		gradleMongoDbVersion = '0.8.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 


jar {
    baseName = 'spring-data-mongodb-test'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.cloud:spring-cloud-spring-service-connector')
	compile('org.springframework.cloud:spring-cloud-cloudfoundry-connector')

    testCompile('org.springframework.boot:spring-boot-starter-test') 
	testCompile('com.jayway.jsonpath:json-path:2.1.0')
	testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.1")
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

